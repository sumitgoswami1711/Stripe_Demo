{"ast":null,"code":"import * as i0 from \"@angular/core\";\nclass ApiUrlHelper {\n  constructor() {\n    this.apiUrl = {\n      subscription: {\n        //GetSubscription \n        GetAllSubscription: 'Subscription/SubscriptionPlans/{userId}',\n        // Subscription Plan By Id\n        GetSubscriptionPlanById: 'Subscription/GetSubscriptionPlanById/{planId}',\n        //card token generate\n        CreateCustomerandSubscription: 'Subscription/SubscribeUser',\n        //get Customer card details\n        GetCustomerCards: 'Subscription/GetCustomerCards/{customerId}',\n        //add Customer Card\n        AddCustomerCard: 'Subscription/AddCustomercard',\n        //Remove Customer Card\n        RemoveCustomerCard: 'Subscription/RemoveCard/{CardId}',\n        //Set Default card\n        SetDefaultCard: 'Subscription/SetDefaultCard',\n        //CancelSubscription\n        CancelSubscription: 'Subscription/CancelSubscription/{userId}',\n        //upgrade Subscription\n        UpgradeSubscription: 'Subscription/UpdateSubscription',\n        // Get Stripe Details By Id\n        GetStripeDetailsById: 'Subscription/GetStripeDetailsById/{userId}',\n        // CreateSetupIntent\n        InitiatePayment: \"Subscription/CreateSetupIntent\",\n        //ConfirmPayment\n        ConfirmPayment: \"Subscription/ConfirmPayment\"\n      },\n      profile: {\n        // update profile\n        UpdateProfile: 'Account/UpdateProfile',\n        // Upload Images\n        UploadImages: 'Account/UploadImages',\n        // Upload Profile Photo\n        UploadProfilePhoto: 'Account/UploadProfilePhoto',\n        //update User Status\n        UserStatus: 'Account/Logout',\n        //Delete User Images\n        DeleteImage: 'Account/DeleteImg/{id}/{imageId}'\n      },\n      common: {\n        // Music List\n        Music: 'Common/Music',\n        // Ethnicity List\n        Ethnicity: 'Common/Ethnicity',\n        // Education List\n        Education: 'Common/Education',\n        // Movies List\n        Movies: 'Common/MoviesAndTV',\n        // Sports List\n        Sports: 'Common/Sports',\n        // Flicker List\n        Flicker: 'Common/Flicker',\n        // Food List\n        Food: 'Common/FoodAndDrinks',\n        // Innovations Lis  t\n        Innovations: 'Common/Innovation',\n        // Exploring List\n        Exploing: 'Common/Probe',\n        // Religion\n        Religion: 'Common/Religion',\n        // Squat\n        Squat: 'Common/Squat',\n        // Treasure\n        Treasure: 'Common/Treasure',\n        // Scrutiny\n        Scrutiny: 'Common/Scrutiny',\n        // About Us Page\n        Aboutus: 'Account/AboutUs/true',\n        // Contact Us Page\n        ContactUs: 'Account/ContactUs/true',\n        // Ters & Conditions Page\n        TermsAndCondition: 'Account/TermsAndCondition/true',\n        // Privacy policy\n        PrivacyPolicy: 'Account/PrivacyPolicy/true',\n        // Save Contact Us Details\n        AccountDetails: 'Account/AddContact'\n      },\n      coach: {\n        // coach list\n        GetCoachList: \"Session/CoachList\",\n        // add update coach\n        AddUpdateCoach: \"coach/Account/AddUpdateCoach\",\n        // coach by id\n        GetCoachById: \"Session/{Id}\",\n        // delete coach\n        DeleteCoach: \"coach/{Id}\",\n        // Follow coach\n        FollowCoach: \"Session/FollowCoach\",\n        // Unfollow coach\n        UnfollowCoach: \"Session/UnfollowCoach\"\n      },\n      quote: {\n        // get quote list\n        QuoteList: 'coach/account/UploadedQuotes',\n        //get quote by id\n        GetQuoteById: 'quotemanagement/{Id}',\n        //add update quote\n        SaveUpdateQuote: 'account/AddUpdateQuote',\n        //delete quote\n        DeleteQuote: 'coach/account/DeleteQuote/{Id}'\n      },\n      session: {\n        //Book Session\n        BookSession: 'session/BookSession',\n        //Get Agora token\n        AgoraToken: 'session/GetAgoraRtmToken',\n        SendNotification: 'session/SaveNotification',\n        //Earnings List\n        EarningsList: 'coach/donation/Donations',\n        //Requested Sessions \n        Sessions: 'coach/session/CoachSessions',\n        //Accept Session\n        AcceptSession: 'coach/session/Accept',\n        //Reject Session\n        RejectSession: 'coach/session/Reject/{Id}',\n        //Send notification to multiple users from live streaming\n        SendMultipleUserNotification: 'session/SendMultipleUserNotification',\n        //Complete Session\n        CompleteSession: 'coach/session/Complete/{Id}'\n      },\n      feed: {\n        //Feed page \n        Feed: 'Account/Feed'\n      },\n      signalrhelper: {\n        // send attachment\n        signalrAttachment: 'signalrhelper/SendandRecivedChatAttachment'\n      },\n      chat: {\n        //Chat List\n        ChatUsers: 'PortalUser/ChatUsersList'\n      },\n      dashboard: {\n        //Coach dashboard details\n        Dashboard: \"coach/account/Dashboard\"\n      },\n      blindroom: {\n        // check if mystery room is active\n        ScheduleOfMysteryRoom: \"Account/MysteryRoomActiveStatus\"\n      },\n      notification: {\n        // get list of notifications\n        GetAllNotification: 'Portaluser/GetAllNotifications',\n        // change notification status\n        ChangeNotificationStatus: 'Portaluser/ChangeNotificationStatus/{id}/{status}',\n        GetAllNotificationsByUserId: 'Portaluser/GetAllNotificationsByUserId/{Id}',\n        GetAllActiveNotification: 'PortalUser/get-all-active-notification'\n      }\n    };\n  }\n  static #_ = this.ɵfac = function ApiUrlHelper_Factory(t) {\n    return new (t || ApiUrlHelper)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ApiUrlHelper,\n    factory: ApiUrlHelper.ɵfac,\n    providedIn: 'root'\n  });\n}\nexport { ApiUrlHelper };","map":{"version":3,"names":["ApiUrlHelper","constructor","apiUrl","subscription","GetAllSubscription","GetSubscriptionPlanById","CreateCustomerandSubscription","GetCustomerCards","AddCustomerCard","RemoveCustomerCard","SetDefaultCard","CancelSubscription","UpgradeSubscription","GetStripeDetailsById","InitiatePayment","ConfirmPayment","profile","UpdateProfile","UploadImages","UploadProfilePhoto","UserStatus","DeleteImage","common","Music","Ethnicity","Education","Movies","Sports","Flicker","Food","Innovations","Exploing","Religion","Squat","Treasure","Scrutiny","Aboutus","ContactUs","TermsAndCondition","PrivacyPolicy","AccountDetails","coach","GetCoachList","AddUpdateCoach","GetCoachById","DeleteCoach","FollowCoach","UnfollowCoach","quote","QuoteList","GetQuoteById","SaveUpdateQuote","DeleteQuote","session","BookSession","AgoraToken","SendNotification","EarningsList","Sessions","AcceptSession","RejectSession","SendMultipleUserNotification","CompleteSession","feed","Feed","signalrhelper","signalrAttachment","chat","ChatUsers","dashboard","Dashboard","blindroom","ScheduleOfMysteryRoom","notification","GetAllNotification","ChangeNotificationStatus","GetAllNotificationsByUserId","GetAllActiveNotification","_","_2","factory","ɵfac","providedIn"],"sources":["C:\\vivek\\Angular\\Stripe_demo\\src\\app\\Common\\api-url-helper\\apiUrlHelper.ts"],"sourcesContent":["    import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class ApiUrlHelper {\r\n    public apiUrl = {\r\n        \r\n        subscription: {\r\n            //GetSubscription \r\n            GetAllSubscription: 'Subscription/SubscriptionPlans/{userId}',\r\n            // Subscription Plan By Id\r\n            GetSubscriptionPlanById: 'Subscription/GetSubscriptionPlanById/{planId}',\r\n            //card token generate\r\n            CreateCustomerandSubscription: 'Subscription/SubscribeUser',\r\n            //get Customer card details\r\n            GetCustomerCards: 'Subscription/GetCustomerCards/{customerId}',\r\n            //add Customer Card\r\n            AddCustomerCard: 'Subscription/AddCustomercard',\r\n            //Remove Customer Card\r\n            RemoveCustomerCard: 'Subscription/RemoveCard/{CardId}',\r\n             //Set Default card\r\n            SetDefaultCard:'Subscription/SetDefaultCard',\r\n            //CancelSubscription\r\n            CancelSubscription:'Subscription/CancelSubscription/{userId}',\r\n            //upgrade Subscription\r\n            UpgradeSubscription :'Subscription/UpdateSubscription',\r\n            // Get Stripe Details By Id\r\n            GetStripeDetailsById :'Subscription/GetStripeDetailsById/{userId}',\r\n            // CreateSetupIntent\r\n            InitiatePayment :\"Subscription/CreateSetupIntent\" ,\r\n            //ConfirmPayment\r\n            ConfirmPayment : \"Subscription/ConfirmPayment\"\r\n        },\r\n        profile: {\r\n            // update profile\r\n            UpdateProfile: 'Account/UpdateProfile',\r\n            // Upload Images\r\n            UploadImages: 'Account/UploadImages',\r\n            // Upload Profile Photo\r\n            UploadProfilePhoto: 'Account/UploadProfilePhoto',\r\n            //update User Status\r\n            UserStatus: 'Account/Logout',\r\n            //Delete User Images\r\n            DeleteImage: 'Account/DeleteImg/{id}/{imageId}'\r\n        },\r\n        common: {\r\n            // Music List\r\n            Music: 'Common/Music',\r\n            // Ethnicity List\r\n            Ethnicity: 'Common/Ethnicity',\r\n            // Education List\r\n            Education: 'Common/Education',\r\n            // Movies List\r\n            Movies: 'Common/MoviesAndTV',\r\n            // Sports List\r\n            Sports: 'Common/Sports',\r\n            // Flicker List\r\n            Flicker: 'Common/Flicker',\r\n            // Food List\r\n            Food: 'Common/FoodAndDrinks',\r\n            // Innovations Lis  t\r\n            Innovations: 'Common/Innovation',\r\n            // Exploring List\r\n            Exploing: 'Common/Probe',\r\n            // Religion\r\n            Religion: 'Common/Religion',\r\n            // Squat\r\n            Squat: 'Common/Squat',\r\n            // Treasure\r\n            Treasure: 'Common/Treasure',\r\n            // Scrutiny\r\n            Scrutiny: 'Common/Scrutiny',\r\n            // About Us Page\r\n            Aboutus: 'Account/AboutUs/true',\r\n            // Contact Us Page\r\n            ContactUs: 'Account/ContactUs/true',\r\n            // Ters & Conditions Page\r\n            TermsAndCondition: 'Account/TermsAndCondition/true',\r\n            // Privacy policy\r\n            PrivacyPolicy: 'Account/PrivacyPolicy/true',\r\n            // Save Contact Us Details\r\n            AccountDetails: 'Account/AddContact'\r\n        },\r\n        coach: {\r\n            // coach list\r\n            GetCoachList: \"Session/CoachList\",\r\n            // add update coach\r\n            AddUpdateCoach: \"coach/Account/AddUpdateCoach\",\r\n            // coach by id\r\n            GetCoachById: \"Session/{Id}\",\r\n            // delete coach\r\n            DeleteCoach: \"coach/{Id}\",\r\n            // Follow coach\r\n            FollowCoach: \"Session/FollowCoach\",\r\n            // Unfollow coach\r\n            UnfollowCoach: \"Session/UnfollowCoach\"\r\n        },\r\n        quote: {\r\n            // get quote list\r\n            QuoteList: 'coach/account/UploadedQuotes',\r\n            //get quote by id\r\n            GetQuoteById: 'quotemanagement/{Id}',\r\n            //add update quote\r\n            SaveUpdateQuote: 'account/AddUpdateQuote',\r\n            //delete quote\r\n            DeleteQuote: 'coach/account/DeleteQuote/{Id}'\r\n        },\r\n        session: {\r\n            //Book Session\r\n            BookSession: 'session/BookSession',\r\n            //Get Agora token\r\n            AgoraToken: 'session/GetAgoraRtmToken',\r\n            SendNotification: 'session/SaveNotification',\r\n            //Earnings List\r\n            EarningsList: 'coach/donation/Donations',\r\n            //Requested Sessions \r\n            Sessions: 'coach/session/CoachSessions',\r\n            //Accept Session\r\n            AcceptSession: 'coach/session/Accept',\r\n            //Reject Session\r\n            RejectSession: 'coach/session/Reject/{Id}',\r\n            //Send notification to multiple users from live streaming\r\n            SendMultipleUserNotification: 'session/SendMultipleUserNotification'\r\n            ,\r\n            //Complete Session\r\n            CompleteSession: 'coach/session/Complete/{Id}'\r\n        },\r\n        feed: {\r\n            //Feed page \r\n            Feed: 'Account/Feed'\r\n        },\r\n        signalrhelper: {\r\n            // send attachment\r\n            signalrAttachment: 'signalrhelper/SendandRecivedChatAttachment'\r\n        },\r\n        chat: {\r\n            //Chat List\r\n            ChatUsers: 'PortalUser/ChatUsersList'\r\n        },\r\n        dashboard: {\r\n            //Coach dashboard details\r\n            Dashboard: \"coach/account/Dashboard\"\r\n        },\r\n        blindroom: {\r\n            // check if mystery room is active\r\n            ScheduleOfMysteryRoom: \"Account/MysteryRoomActiveStatus\"\r\n        },\r\n        notification: {\r\n            // get list of notifications\r\n            GetAllNotification: 'Portaluser/GetAllNotifications',\r\n            // change notification status\r\n            ChangeNotificationStatus: 'Portaluser/ChangeNotificationStatus/{id}/{status}',\r\n            GetAllNotificationsByUserId: 'Portaluser/GetAllNotificationsByUserId/{Id}',\r\n            GetAllActiveNotification:'PortalUser/get-all-active-notification'\r\n        },\r\n    };\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}